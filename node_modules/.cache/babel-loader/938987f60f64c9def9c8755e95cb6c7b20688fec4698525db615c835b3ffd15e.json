{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"task-list-container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  class: \"card-body\"\n};\nconst _hoisted_4 = {\n  class: \"d-flex justify-content-center\"\n};\nconst _hoisted_5 = {\n  class: \"btn-group\",\n  role: \"group\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  key: 1,\n  class: \"alert alert-info text-center\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", {\n    class: \"text-center my-4\"\n  }, \"Lista de Tareas\", -1)), _createElementVNode(\"button\", {\n    class: \"btn btn-primary mb-4\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.fetchTasks && $options.fetchTasks(...args))\n  }, \" Cargar Tareas \"), $data.tasks.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, task => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: task.id,\n      class: \"task-item card mb-3\"\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h5\", {\n      class: \"card-title\",\n      style: _normalizeStyle({\n        textDecoration: task.completed ? 'line-through' : 'none'\n      })\n    }, _toDisplayString(task.todo), 5), _createElementVNode(\"p\", {\n      class: _normalizeClass([\"card-text\", {\n        'text-success': task.completed,\n        'text-danger': !task.completed\n      }])\n    }, _toDisplayString(task.completed ? 'Completada' : 'Pendiente'), 3), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n      class: \"btn btn-sm btn-success\",\n      onClick: $event => $options.toggleTaskCompletion(task)\n    }, [_cache[1] || (_cache[1] = _createElementVNode(\"i\", {\n      class: \"fas fa-check\"\n    }, null, -1)), _createTextVNode(\" \" + _toDisplayString(task.completed ? 'Desmarcar' : 'Completar'), 1)], 8, _hoisted_6), _createElementVNode(\"button\", {\n      class: \"btn btn-sm btn-danger\",\n      onClick: $event => $options.deleteTask(task)\n    }, _cache[2] || (_cache[2] = [_createElementVNode(\"i\", {\n      class: \"fas fa-trash-alt\"\n    }, null, -1), _createTextVNode(\" Eliminar \")]), 8, _hoisted_7)])])])]);\n  }), 128))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, \" No hay tareas cargadas. \"))]);\n}","map":{"version":3,"names":["class","key","role","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","args","$options","fetchTasks","$data","tasks","length","_hoisted_2","_Fragment","_renderList","task","id","_hoisted_3","style","_normalizeStyle","textDecoration","completed","todo","_normalizeClass","_hoisted_4","_hoisted_5","$event","toggleTaskCompletion","_createTextVNode","_toDisplayString","_hoisted_6","deleteTask","_hoisted_7","_hoisted_8"],"sources":["C:\\Users\\jessi\\GestorTareas-Plantilla\\GestorTareas-Plantill\\src\\views\\TaskList.vue"],"sourcesContent":["<template>\r\n    <div class=\"task-list-container\">\r\n      <h1 class=\"text-center my-4\">Lista de Tareas</h1>\r\n      <button class=\"btn btn-primary mb-4\" @click=\"fetchTasks\">\r\n        Cargar Tareas\r\n      </button>\r\n  \r\n      <div v-if=\"tasks.length > 0\">\r\n        <div v-for=\"task in tasks\" :key=\"task.id\" class=\"task-item card mb-3\">\r\n          <div class=\"card-body\">\r\n            <h5 \r\n              class=\"card-title\" \r\n              :style=\"{ textDecoration: task.completed ? 'line-through' : 'none' }\"\r\n            >\r\n              {{ task.todo }}\r\n            </h5>\r\n            <p \r\n              class=\"card-text\" \r\n              :class=\"{ 'text-success': task.completed, 'text-danger': !task.completed }\"\r\n            >\r\n              {{ task.completed ? 'Completada' : 'Pendiente' }}\r\n            </p>\r\n            \r\n            <div class=\"d-flex justify-content-center\">\r\n              <div class=\"btn-group\" role=\"group\">\r\n                <button \r\n                  class=\"btn btn-sm btn-success\" \r\n                  @click=\"toggleTaskCompletion(task)\"\r\n                >\r\n                  <i class=\"fas fa-check\"></i> {{ task.completed ? 'Desmarcar' : 'Completar' }}\r\n                </button>\r\n                <button \r\n                  class=\"btn btn-sm btn-danger\" \r\n                  @click=\"deleteTask(task)\"\r\n                >\r\n                  <i class=\"fas fa-trash-alt\"></i> Eliminar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div v-else class=\"alert alert-info text-center\">\r\n        No hay tareas cargadas.\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'TaskList',\r\n    data() {\r\n      return {\r\n        tasks: [], // Aquí se almacenarán las tareas traídas de la API\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchTasks() {\r\n        try {\r\n          const response = await axios.get('https://dummyjson.com/todos');\r\n          this.tasks = response.data.todos; // Asume que la respuesta tiene un array \"todos\"\r\n        } catch (error) {\r\n          console.error('Error al cargar las tareas desde la API:', error);\r\n        }\r\n      },\r\n      toggleTaskCompletion(task) {\r\n        task.completed = !task.completed;\r\n      },\r\n      deleteTask(task) {\r\n        this.tasks = this.tasks.filter(t => t.id !== task.id);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .task-list-container {\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    background-color: #f8f9fa;\r\n    border-radius: 10px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .task-item {\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    max-width: 500px; /* Ajustamos el ancho de las tarjetas */\r\n    margin: 10px auto; /* Centrado de las tarjetas */\r\n  }\r\n  \r\n  .task-item:hover {\r\n    transform: scale(1.02);\r\n    transition: transform 0.3s ease;\r\n  }\r\n  \r\n  .card-title {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .card-text {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  button {\r\n    font-size: 14px;\r\n    border-radius: 20px;\r\n    padding: 8px 16px;\r\n  }\r\n  \r\n  .btn-group .btn {\r\n    margin-right: 10px; /* Ajustamos el espacio entre los botones */\r\n  }\r\n  \r\n  .btn-success {\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .btn-success:hover {\r\n    background-color: #218838;\r\n  }\r\n  \r\n  .btn-danger {\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .btn-danger:hover {\r\n    background-color: #c82333;\r\n  }\r\n  \r\n  .alert {\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .card-body {\r\n    background-color: #ffffff;\r\n  }\r\n  \r\n  /* Estilos para los iconos */\r\n  button i {\r\n    margin-right: 5px;\r\n    font-size: 16px;\r\n  }\r\n  </style>\r\n  \r\n  <!-- Código dentro de la etiqueta <head> del archivo index.html -->\r\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\" />"],"mappings":";;EACSA,KAAK,EAAC;AAAqB;;EADpCC,GAAA;AAAA;;EASeD,KAAK,EAAC;AAAW;;EAcfA,KAAK,EAAC;AAA+B;;EACnCA,KAAK,EAAC,WAAW;EAACE,IAAI,EAAC;;mBAxB1C;mBAAA;;EAAAD,GAAA;EA2CkBD,KAAK,EAAC;;;uBA1CpBG,mBAAA,CA6CM,OA7CNC,UA6CM,G,0BA5CJC,mBAAA,CAAiD;IAA7CL,KAAK,EAAC;EAAkB,GAAC,iBAAe,QAC5CK,mBAAA,CAES;IAFDL,KAAK,EAAC,sBAAsB;IAAEM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,iBAEzD,GAEWG,KAAA,CAAAC,KAAK,CAACC,MAAM,Q,cAAvBV,mBAAA,CAkCM,OAzCZW,UAAA,I,kBAQQX,mBAAA,CAgCMY,SAAA,QAxCdC,WAAA,CAQ4BL,KAAA,CAAAC,KAAK,EAAbK,IAAI;yBAAhBd,mBAAA,CAgCM;MAhCsBF,GAAG,EAAEgB,IAAI,CAACC,EAAE;MAAElB,KAAK,EAAC;QAC9CK,mBAAA,CA8BM,OA9BNc,UA8BM,GA7BJd,mBAAA,CAKK;MAJHL,KAAK,EAAC,YAAY;MACjBoB,KAAK,EAZpBC,eAAA;QAAAC,cAAA,EAYwCL,IAAI,CAACM,SAAS;MAAA;wBAErCN,IAAI,CAACO,IAAI,OAEdnB,mBAAA,CAKI;MAJFL,KAAK,EAjBnByB,eAAA,EAiBoB,WAAW;QAAA,gBACSR,IAAI,CAACM,SAAS;QAAA,gBAAkBN,IAAI,CAACM;MAAS;wBAErEN,IAAI,CAACM,SAAS,oCAGnBlB,mBAAA,CAeM,OAfNqB,UAeM,GAdJrB,mBAAA,CAaM,OAbNsB,UAaM,GAZJtB,mBAAA,CAKS;MAJPL,KAAK,EAAC,wBAAwB;MAC7BM,OAAK,EAAAsB,MAAA,IAAEnB,QAAA,CAAAoB,oBAAoB,CAACZ,IAAI;kCAEjCZ,mBAAA,CAA4B;MAAzBL,KAAK,EAAC;IAAc,eA7BzC8B,gBAAA,CA6B8C,GAAC,GAAAC,gBAAA,CAAGd,IAAI,CAACM,SAAS,kC,KA7BhES,UAAA,GA+BgB3B,mBAAA,CAKS;MAJPL,KAAK,EAAC,uBAAuB;MAC5BM,OAAK,EAAAsB,MAAA,IAAEnB,QAAA,CAAAwB,UAAU,CAAChB,IAAI;kCAEvBZ,mBAAA,CAAgC;MAA7BL,KAAK,EAAC;IAAkB,cAnC7C8B,gBAAA,CAmCkD,YAClC,E,MApChBI,UAAA,E;gCA2CM/B,mBAAA,CAEM,OAFNgC,UAEM,EAF2C,2BAEjD,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}