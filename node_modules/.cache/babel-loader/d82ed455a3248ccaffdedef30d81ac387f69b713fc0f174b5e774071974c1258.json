{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container my-5\"\n};\nconst _hoisted_2 = {\n  class: \"add-task-container mb-4 d-flex justify-content-center align-items-center\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  class: \"card-body\"\n};\nconst _hoisted_5 = {\n  class: \"d-flex justify-content-center\"\n};\nconst _hoisted_6 = {\n  class: \"btn-group\",\n  role: \"group\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = {\n  key: 1,\n  class: \"alert alert-info text-center\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"h1\", {\n    class: \"text-center mb-4\"\n  }, \"Lista de Tareas\", -1)), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newTask = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.addTask && $options.addTask(...args), [\"enter\"])),\n    placeholder: \"Añadir una nueva tarea\",\n    class: \"form-control me-2\",\n    style: {\n      \"max-width\": \"400px\"\n    }\n  }, null, 544), [[_vModelText, $data.newTask]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.addTask && $options.addTask(...args)),\n    class: \"btn btn-primary\"\n  }, \" Añadir \")]), $data.allTasks.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"Tareas:\", -1)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allTasks, task => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: task.id,\n      class: \"task card mb-3\"\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h5\", {\n      style: _normalizeStyle({\n        textDecoration: task.completed ? 'line-through' : 'none'\n      }),\n      class: \"card-title\"\n    }, _toDisplayString(task.todo), 5), _createElementVNode(\"span\", {\n      class: _normalizeClass([{\n        'text-success': task.completed,\n        'text-danger': !task.completed\n      }, \"d-block mb-2\"])\n    }, _toDisplayString(task.completed ? 'Completada' : 'Pendiente'), 3), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n      onClick: $event => $options.toggleTaskCompletion(task),\n      class: \"btn btn-sm btn-warning\"\n    }, [_cache[3] || (_cache[3] = _createElementVNode(\"i\", {\n      class: \"fas fa-check\"\n    }, null, -1)), _createTextVNode(\" \" + _toDisplayString(task.completed ? 'Desmarcar' : 'Completar'), 1)], 8, _hoisted_7), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteTask(task),\n      class: \"btn btn-sm btn-danger\"\n    }, _cache[4] || (_cache[4] = [_createElementVNode(\"i\", {\n      class: \"fas fa-trash-alt\"\n    }, null, -1), _createTextVNode(\" Eliminar \")]), 8, _hoisted_8)])])])]);\n  }), 128))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \" No hay tareas disponibles. \"))]);\n}","map":{"version":3,"names":["class","key","role","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","$event","$data","newTask","onKeyup","_withKeys","args","$options","addTask","placeholder","style","onClick","allTasks","length","_hoisted_3","_Fragment","_renderList","task","id","_hoisted_4","_normalizeStyle","textDecoration","completed","todo","_normalizeClass","_hoisted_5","_hoisted_6","toggleTaskCompletion","_createTextVNode","_toDisplayString","_hoisted_7","deleteTask","_hoisted_8","_hoisted_9"],"sources":["C:\\Users\\jessi\\GestorTareas-Plantilla\\GestorTareas-Plantill\\src\\views\\CombinedView.vue"],"sourcesContent":["<template>\r\n    <div class=\"container my-5\">\r\n      <h1 class=\"text-center mb-4\">Lista de Tareas</h1>\r\n  \r\n      <!-- Campo para añadir nuevas tareas (centrado) -->\r\n      <div class=\"add-task-container mb-4 d-flex justify-content-center align-items-center\">\r\n        <input\r\n          v-model=\"newTask\"\r\n          @keyup.enter=\"addTask\"\r\n          placeholder=\"Añadir una nueva tarea\"\r\n          class=\"form-control me-2\"\r\n          style=\"max-width: 400px\"\r\n        />\r\n        <button @click=\"addTask\" class=\"btn btn-primary\">\r\n          Añadir\r\n        </button>\r\n      </div>\r\n  \r\n      <!-- Mostrar las tareas combinadas, que ya incluyen las tareas de la API -->\r\n      <div v-if=\"allTasks.length > 0\">\r\n        <h3>Tareas:</h3>\r\n        <div v-for=\"task in allTasks\" :key=\"task.id\" class=\"task card mb-3\">\r\n          <div class=\"card-body\">\r\n            <h5 :style=\"{ textDecoration: task.completed ? 'line-through' : 'none' }\" class=\"card-title\">\r\n              {{ task.todo }}\r\n            </h5>\r\n            <span \r\n              :class=\"{'text-success': task.completed, 'text-danger': !task.completed}\"\r\n              class=\"d-block mb-2\"\r\n            >\r\n              {{ task.completed ? 'Completada' : 'Pendiente' }}\r\n            </span>\r\n  \r\n            <!-- Botones centrados con iconos -->\r\n            <div class=\"d-flex justify-content-center\">\r\n              <div class=\"btn-group\" role=\"group\">\r\n                <button @click=\"toggleTaskCompletion(task)\" class=\"btn btn-sm btn-warning\">\r\n                  <i class=\"fas fa-check\"></i> {{ task.completed ? 'Desmarcar' : 'Completar' }}\r\n                </button>\r\n                <button @click=\"deleteTask(task)\" class=\"btn btn-sm btn-danger\">\r\n                  <i class=\"fas fa-trash-alt\"></i> Eliminar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div v-else class=\"alert alert-info text-center\">\r\n        No hay tareas disponibles.\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'CombinedView',\r\n    data() {\r\n      return {\r\n        newTask: '', // Tarea nueva que se va a añadir\r\n        allTasks: [], // Tareas combinadas de la API y las nuevas\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchTasks(); // Cargar las tareas desde la API al montar el componente\r\n    },\r\n    methods: {\r\n      async fetchTasks() {\r\n        try {\r\n          const response = await axios.get('https://dummyjson.com/todos');\r\n          this.allTasks = response.data.todos; // Asume que la respuesta tiene un array \"todos\"\r\n        } catch (error) {\r\n          console.error('Error al cargar las tareas desde la API:', error);\r\n        }\r\n      },\r\n      addTask() {\r\n        if (this.newTask.trim() === '') return; // No permitir tareas vacías\r\n        const task = {\r\n          todo: this.newTask,\r\n          completed: false,\r\n          id: Date.now(), // Asignamos un ID único con la hora actual\r\n        };\r\n        this.allTasks.unshift(task); // Agregamos la tarea al principio del array\r\n        this.newTask = ''; // Limpiamos el campo de texto\r\n      },\r\n      toggleTaskCompletion(task) {\r\n        task.completed = !task.completed;\r\n      },\r\n      deleteTask(task) {\r\n        this.allTasks = this.allTasks.filter(t => t.id !== task.id);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .task {\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    background-color: #fff;\r\n    padding: 10px;\r\n    max-width: 500px; /* Ajustamos el ancho de las tarjetas */\r\n    margin: 10px auto; /* Centrado de las tarjetas */\r\n  }\r\n  \r\n  .task:hover {\r\n    transform: scale(1.02);\r\n    transition: transform 0.3s ease;\r\n  }\r\n  \r\n  .card-title {\r\n    font-size: 16px; /* Reducimos el tamaño del texto */\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .card-body {\r\n    background-color: #f8f9fa;\r\n  }\r\n  \r\n  button {\r\n    font-size: 14px;\r\n    border-radius: 20px;\r\n    padding: 8px 16px;\r\n  }\r\n  \r\n  .btn-group .btn {\r\n    margin-right: 5px; /* Reduce el espacio entre los botones */\r\n  }\r\n  \r\n  .btn-warning {\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .btn-warning:hover {\r\n    background-color: #e0a800;\r\n  }\r\n  \r\n  .btn-danger {\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .btn-danger:hover {\r\n    background-color: #c82333;\r\n  }\r\n  \r\n  .alert {\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .alert-info {\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  /* Estilos para los iconos */\r\n  button i {\r\n    margin-right: 5px;\r\n    font-size: 16px;\r\n  }\r\n  </style>\r\n  \r\n  <!-- No olvides importar FontAwesome en tu archivo index.html (si aún no lo has hecho) -->\r\n  <!-- Agrega este código dentro de la etiqueta <head> de tu archivo index.html -->\r\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\" />"],"mappings":";;EACSA,KAAK,EAAC;AAAgB;;EAIpBA,KAAK,EAAC;AAA0E;;EAL3FC,GAAA;AAAA;;EAsBeD,KAAK,EAAC;AAAW;;EAYfA,KAAK,EAAC;AAA+B;;EACnCA,KAAK,EAAC,WAAW;EAACE,IAAI,EAAC;;mBAnC1C;mBAAA;;EAAAD,GAAA;EAgDkBD,KAAK,EAAC;;;uBA/CpBG,mBAAA,CAkDM,OAlDNC,UAkDM,G,0BAjDJC,mBAAA,CAAiD;IAA7CL,KAAK,EAAC;EAAkB,GAAC,iBAAe,QAG5CK,mBAAA,CAWM,OAXNC,UAWM,G,gBAVJD,mBAAA,CAME;IAZV,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOmBC,KAAA,CAAAC,OAAO,GAAAF,MAAA;IACfG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MARhBK,SAAA,KAAAC,IAAA,KAQwBC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;IACrBG,WAAW,EAAC,wBAAwB;IACpChB,KAAK,EAAC,mBAAmB;IACzBiB,KAAwB,EAAxB;MAAA;IAAA;gCAJSR,KAAA,CAAAC,OAAO,E,GAMlBL,mBAAA,CAES;IAFAa,OAAK,EAAAX,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;IAAEb,KAAK,EAAC;KAAkB,UAEjD,E,GAISS,KAAA,CAAAU,QAAQ,CAACC,MAAM,Q,cAA1BjB,mBAAA,CA2BM,OA9CZkB,UAAA,G,0BAoBQhB,mBAAA,CAAgB,YAAZ,SAAO,S,kBACXF,mBAAA,CAwBMmB,SAAA,QA7CdC,WAAA,CAqB4Bd,KAAA,CAAAU,QAAQ,EAAhBK,IAAI;yBAAhBrB,mBAAA,CAwBM;MAxByBF,GAAG,EAAEuB,IAAI,CAACC,EAAE;MAAEzB,KAAK,EAAC;QACjDK,mBAAA,CAsBM,OAtBNqB,UAsBM,GArBJrB,mBAAA,CAEK;MAFAY,KAAK,EAvBtBU,eAAA;QAAAC,cAAA,EAuB0CJ,IAAI,CAACK,SAAS;MAAA;MAA8B7B,KAAK,EAAC;wBAC3EwB,IAAI,CAACM,IAAI,OAEdzB,mBAAA,CAKO;MAJJL,KAAK,EA3BpB+B,eAAA;QAAA,gBA2BuCP,IAAI,CAACK,SAAS;QAAA,gBAAkBL,IAAI,CAACK;MAAS,GACjE,cAAc;wBAEjBL,IAAI,CAACK,SAAS,oCAInBxB,mBAAA,CASM,OATN2B,UASM,GARJ3B,mBAAA,CAOM,OAPN4B,UAOM,GANJ5B,mBAAA,CAES;MAFAa,OAAK,EAAAV,MAAA,IAAEM,QAAA,CAAAoB,oBAAoB,CAACV,IAAI;MAAGxB,KAAK,EAAC;kCAChDK,mBAAA,CAA4B;MAAzBL,KAAK,EAAC;IAAc,eArCzCmC,gBAAA,CAqC8C,GAAC,GAAAC,gBAAA,CAAGZ,IAAI,CAACK,SAAS,kC,KArChEQ,UAAA,GAuCgBhC,mBAAA,CAES;MAFAa,OAAK,EAAAV,MAAA,IAAEM,QAAA,CAAAwB,UAAU,CAACd,IAAI;MAAGxB,KAAK,EAAC;kCACtCK,mBAAA,CAAgC;MAA7BL,KAAK,EAAC;IAAkB,cAxC7CmC,gBAAA,CAwCkD,YAClC,E,MAzChBI,UAAA,E;gCAgDMpC,mBAAA,CAEM,OAFNqC,UAEM,EAF2C,8BAEjD,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}