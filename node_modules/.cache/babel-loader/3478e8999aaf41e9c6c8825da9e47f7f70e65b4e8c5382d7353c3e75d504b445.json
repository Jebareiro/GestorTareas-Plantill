{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'TaskList',\n  data() {\n    return {\n      tasks: [] // Aquí se almacenarán las tareas traídas de la API\n    };\n  },\n  methods: {\n    async fetchTasks() {\n      try {\n        const response = await axios.get('https://dummyjson.com/todos');\n        this.tasks = response.data.todos; // Asume que la respuesta tiene un array \"todos\"\n      } catch (error) {\n        console.error('Error al cargar las tareas desde la API:', error);\n      }\n    },\n    toggleTaskCompletion(task) {\n      task.completed = !task.completed;\n    },\n    deleteTask(task) {\n      this.tasks = this.tasks.filter(t => t.id !== task.id);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","tasks","methods","fetchTasks","response","get","todos","error","console","toggleTaskCompletion","task","completed","deleteTask","filter","t","id"],"sources":["C:\\Users\\jessi\\GestorTareas-Plantilla\\GestorTareas-Plantill\\src\\views\\TaskList.vue"],"sourcesContent":["<template>\r\n    <div class=\"task-list-container\">\r\n      <h1 class=\"text-center my-4\">Lista de Tareas</h1>\r\n      <button class=\"btn btn-primary mb-4\" @click=\"fetchTasks\">\r\n        Cargar Tareas\r\n      </button>\r\n  \r\n      <div v-if=\"tasks.length > 0\">\r\n        <div v-for=\"task in tasks\" :key=\"task.id\" class=\"task-item card mb-3\">\r\n          <div class=\"card-body\">\r\n            <h5 \r\n              class=\"card-title\" \r\n              :style=\"{ textDecoration: task.completed ? 'line-through' : 'none' }\"\r\n            >\r\n              {{ task.todo }}\r\n            </h5>\r\n            <p \r\n              class=\"card-text\" \r\n              :class=\"{ 'text-success': task.completed, 'text-danger': !task.completed }\"\r\n            >\r\n              {{ task.completed ? 'Completada' : 'Pendiente' }}\r\n            </p>\r\n            \r\n            <div class=\"d-flex justify-content-center\">\r\n              <div class=\"btn-group\" role=\"group\">\r\n                <button \r\n                  class=\"btn btn-sm btn-success\" \r\n                  @click=\"toggleTaskCompletion(task)\"\r\n                >\r\n                  <i class=\"fas fa-check\"></i> {{ task.completed ? 'Desmarcar' : 'Completar' }}\r\n                </button>\r\n                <button \r\n                  class=\"btn btn-sm btn-danger\" \r\n                  @click=\"deleteTask(task)\"\r\n                >\r\n                  <i class=\"fas fa-trash-alt\"></i> Eliminar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div v-else class=\"alert alert-info text-center\">\r\n        No hay tareas cargadas.\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'TaskList',\r\n    data() {\r\n      return {\r\n        tasks: [], // Aquí se almacenarán las tareas traídas de la API\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchTasks() {\r\n        try {\r\n          const response = await axios.get('https://dummyjson.com/todos');\r\n          this.tasks = response.data.todos; // Asume que la respuesta tiene un array \"todos\"\r\n        } catch (error) {\r\n          console.error('Error al cargar las tareas desde la API:', error);\r\n        }\r\n      },\r\n      toggleTaskCompletion(task) {\r\n        task.completed = !task.completed;\r\n      },\r\n      deleteTask(task) {\r\n        this.tasks = this.tasks.filter(t => t.id !== task.id);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .task-list-container {\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    background-color: #f8f9fa;\r\n    border-radius: 10px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .task-item {\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    max-width: 500px; /* Ajustamos el ancho de las tarjetas */\r\n    margin: 10px auto; /* Centrado de las tarjetas */\r\n  }\r\n  \r\n  .task-item:hover {\r\n    transform: scale(1.02);\r\n    transition: transform 0.3s ease;\r\n  }\r\n  \r\n  .card-title {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .card-text {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  button {\r\n    font-size: 14px;\r\n    border-radius: 20px;\r\n    padding: 8px 16px;\r\n  }\r\n  \r\n  .btn-group .btn {\r\n    margin-right: 10px; /* Ajustamos el espacio entre los botones */\r\n  }\r\n  \r\n  .btn-success {\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .btn-success:hover {\r\n    background-color: #218838;\r\n  }\r\n  \r\n  .btn-danger {\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .btn-danger:hover {\r\n    background-color: #c82333;\r\n  }\r\n  \r\n  .alert {\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .card-body {\r\n    background-color: #ffffff;\r\n  }\r\n  \r\n  /* Estilos para los iconos */\r\n  button i {\r\n    margin-right: 5px;\r\n    font-size: 16px;\r\n  }\r\n  </style>\r\n  \r\n  <!-- Código dentro de la etiqueta <head> del archivo index.html -->\r\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\" />"],"mappings":"AAkDE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE,CAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMN,KAAK,CAACO,GAAG,CAAC,6BAA6B,CAAC;QAC/D,IAAI,CAACJ,KAAI,GAAIG,QAAQ,CAACJ,IAAI,CAACM,KAAK,EAAE;MACpC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAClE;IACF,CAAC;IACDE,oBAAoBA,CAACC,IAAI,EAAE;MACzBA,IAAI,CAACC,SAAQ,GAAI,CAACD,IAAI,CAACC,SAAS;IAClC,CAAC;IACDC,UAAUA,CAACF,IAAI,EAAE;MACf,IAAI,CAACT,KAAI,GAAI,IAAI,CAACA,KAAK,CAACY,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAML,IAAI,CAACK,EAAE,CAAC;IACvD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}