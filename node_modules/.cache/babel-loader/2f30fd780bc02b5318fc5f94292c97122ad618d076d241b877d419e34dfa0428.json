{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"add-task-container\"\n};\nconst _hoisted_2 = {\n  class: \"input-group mb-4\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"task-list\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"h1\", null, \"Añadir Tarea\", -1)), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newTask = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.addTask && $options.addTask(...args), [\"enter\"])),\n    placeholder: \"Añadir nueva tarea\",\n    class: \"form-control task-input\"\n  }, null, 544), [[_vModelText, $data.newTask]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.addTask && $options.addTask(...args)),\n    class: \"btn btn-primary ms-2\"\n  }, _cache[3] || (_cache[3] = [_createElementVNode(\"i\", {\n    class: \"fas fa-plus-circle\"\n  }, null, -1), _createTextVNode(\" Añadir \")]))]), $data.tasks.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, task => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: task.id,\n      class: \"task-item d-flex justify-content-between align-items-center p-3 mb-2 bg-light rounded shadow-sm\"\n    }, [_createElementVNode(\"span\", {\n      class: _normalizeClass({\n        completed: task.completed\n      })\n    }, _toDisplayString(task.todo), 3), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.toggleTaskCompletion(task),\n      class: \"btn btn-success me-2\"\n    }, _toDisplayString(task.completed ? 'Desmarcar' : 'Completar'), 9, _hoisted_4), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteTask(task),\n      class: \"btn btn-danger\"\n    }, _cache[4] || (_cache[4] = [_createElementVNode(\"i\", {\n      class: \"fas fa-trash-alt\"\n    }, null, -1), _createTextVNode(\" Eliminar \")]), 8, _hoisted_5)])]);\n  }), 128))])) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","$event","$data","newTask","onKeyup","_withKeys","args","$options","addTask","placeholder","onClick","_createTextVNode","tasks","length","_hoisted_3","_Fragment","_renderList","task","id","_normalizeClass","completed","todo","toggleTaskCompletion","_hoisted_4","deleteTask","_hoisted_5","_createCommentVNode"],"sources":["C:\\Users\\jessi\\GestorTareas-Plantilla\\GestorTareas-Plantill\\src\\views\\AddTask.vue"],"sourcesContent":["<template>\r\n    <div class=\"add-task-container\">\r\n      <h1>Añadir Tarea</h1>\r\n      <div class=\"input-group mb-4\">\r\n        <input \r\n          v-model=\"newTask\" \r\n          @keyup.enter=\"addTask\" \r\n          placeholder=\"Añadir nueva tarea\" \r\n          class=\"form-control task-input\"\r\n        />\r\n        <button @click=\"addTask\" class=\"btn btn-primary ms-2\">\r\n          <i class=\"fas fa-plus-circle\"></i> Añadir\r\n        </button>\r\n      </div>\r\n  \r\n      <div v-if=\"tasks.length > 0\" class=\"task-list\">\r\n        <div v-for=\"task in tasks\" :key=\"task.id\" class=\"task-item d-flex justify-content-between align-items-center p-3 mb-2 bg-light rounded shadow-sm\">\r\n          <span :class=\"{ completed: task.completed }\">{{ task.todo }}</span>\r\n          <div>\r\n            <button @click=\"toggleTaskCompletion(task)\" class=\"btn btn-success me-2\">\r\n              {{ task.completed ? 'Desmarcar' : 'Completar' }}\r\n            </button>\r\n            <button @click=\"deleteTask(task)\" class=\"btn btn-danger\">\r\n              <i class=\"fas fa-trash-alt\"></i> Eliminar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: \"AddTask\",\r\n    data() {\r\n      return {\r\n        newTask: \"\", // Campo de entrada para la nueva tarea\r\n        tasks: [],   // Lista de tareas locales\r\n      };\r\n    },\r\n    methods: {\r\n      addTask() {\r\n        if (this.newTask.trim() === \"\") return;\r\n  \r\n        const newTask = {\r\n          todo: this.newTask,\r\n          completed: false,\r\n          id: Date.now(), \r\n        };\r\n  \r\n        // Añadir la nueva tarea al inicio de la lista\r\n        this.tasks.unshift(newTask);\r\n        this.newTask = \"\"; // Limpiar el campo de entrada después de agregar\r\n      },\r\n  \r\n      // Elimina una tarea específica de la lista\r\n      deleteTask(task) {\r\n        this.tasks = this.tasks.filter((t) => t.id !== task.id);\r\n      },\r\n  \r\n      // Cambia el estado de la tarea entre completada y no completada\r\n      toggleTaskCompletion(task) {\r\n        task.completed = !task.completed;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .add-task-container {\r\n    padding: 20px;\r\n    max-width: 500px;\r\n    margin: 0 auto;\r\n    background-color: #f5f5f5;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    text-align: center;\r\n  }\r\n  \r\n  h1 {\r\n    font-size: 24px;\r\n    color: #35495E;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .input-group {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .task-input {\r\n    flex-grow: 1;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 30px;\r\n    font-size: 16px;\r\n    outline: none;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .task-input:focus {\r\n    border-color: #007bff;\r\n  }\r\n  \r\n  .add-button {\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 30px;\r\n    background-color: #007bff;\r\n    color: white;\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .add-button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  .add-button i {\r\n    margin-right: 8px;\r\n  }\r\n  \r\n  .task-list {\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .task-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 15px;\r\n    margin-bottom: 10px;\r\n    background-color: #ffffff;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .task-item:hover {\r\n    transform: scale(1.02);\r\n    transition: transform 0.3s ease;\r\n  }\r\n  \r\n  .completed {\r\n    text-decoration: line-through;\r\n    color: #888;\r\n  }\r\n  \r\n  button {\r\n    padding: 8px 16px;\r\n    border: none;\r\n    border-radius: 30px;\r\n    cursor: pointer;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .btn-complete {\r\n    background-color: #28a745;\r\n    color: white;\r\n    margin-right: 10px;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .btn-complete:hover {\r\n    background-color: #218838;\r\n  }\r\n  \r\n  .btn-delete {\r\n    background-color: #dc3545;\r\n    color: white;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .btn-delete:hover {\r\n    background-color: #c82333;\r\n  }\r\n  \r\n  button i {\r\n    margin-right: 5px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAoB;;EAExBA,KAAK,EAAC;AAAkB;;EAHnCC,GAAA;EAemCD,KAAK,EAAC;;mBAfzC;mBAAA;;uBACIE,mBAAA,CA2BM,OA3BNC,UA2BM,G,0BA1BJC,mBAAA,CAAqB,YAAjB,cAAY,QAChBA,mBAAA,CAUM,OAVNC,UAUM,G,gBATJD,mBAAA,CAKE;IATV,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKmBC,KAAA,CAAAC,OAAO,GAAAF,MAAA;IACfG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MANhBK,SAAA,KAAAC,IAAA,KAMwBC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;IACrBG,WAAW,EAAC,oBAAoB;IAChCf,KAAK,EAAC;gCAHGQ,KAAA,CAAAC,OAAO,E,GAKlBL,mBAAA,CAES;IAFAY,OAAK,EAAAV,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;IAAEZ,KAAK,EAAC;gCAC7BI,mBAAA,CAAkC;IAA/BJ,KAAK,EAAC;EAAoB,cAXvCiB,gBAAA,CAW4C,UACpC,E,MAGST,KAAA,CAAAU,KAAK,CAACC,MAAM,Q,cAAvBjB,mBAAA,CAYM,OAZNkB,UAYM,I,kBAXJlB,mBAAA,CAUMmB,SAAA,QA1BdC,WAAA,CAgB4Bd,KAAA,CAAAU,KAAK,EAAbK,IAAI;yBAAhBrB,mBAAA,CAUM;MAVsBD,GAAG,EAAEsB,IAAI,CAACC,EAAE;MAAExB,KAAK,EAAC;QAC9CI,mBAAA,CAAmE;MAA5DJ,KAAK,EAjBtByB,eAAA;QAAAC,SAAA,EAiBqCH,IAAI,CAACG;MAAS;wBAAOH,IAAI,CAACI,IAAI,OACzDvB,mBAAA,CAOM,cANJA,mBAAA,CAES;MAFAY,OAAK,EAAAT,MAAA,IAAEM,QAAA,CAAAe,oBAAoB,CAACL,IAAI;MAAGvB,KAAK,EAAC;wBAC7CuB,IAAI,CAACG,SAAS,kCApB/BG,UAAA,GAsBYzB,mBAAA,CAES;MAFAY,OAAK,EAAAT,MAAA,IAAEM,QAAA,CAAAiB,UAAU,CAACP,IAAI;MAAGvB,KAAK,EAAC;kCACtCI,mBAAA,CAAgC;MAA7BJ,KAAK,EAAC;IAAkB,cAvBzCiB,gBAAA,CAuB8C,YAClC,E,MAxBZc,UAAA,E;iBAAAC,mBAAA,W","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}