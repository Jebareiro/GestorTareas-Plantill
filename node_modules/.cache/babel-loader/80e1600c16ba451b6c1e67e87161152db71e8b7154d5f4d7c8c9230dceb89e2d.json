{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'CombinedView',\n  data() {\n    return {\n      newTask: '',\n      // Tarea nueva que se va a añadir\n      allTasks: [] // Tareas combinadas de la API y las nuevas\n    };\n  },\n  mounted() {\n    this.fetchTasks(); // Cargar las tareas desde la API al montar el componente\n  },\n  methods: {\n    async fetchTasks() {\n      try {\n        const response = await axios.get('https://dummyjson.com/todos');\n        this.allTasks = response.data.todos; // Asume que la respuesta tiene un array \"todos\"\n      } catch (error) {\n        console.error('Error al cargar las tareas desde la API:', error);\n      }\n    },\n    addTask() {\n      if (this.newTask.trim() === '') return; // No permitir tareas vacías\n      const task = {\n        todo: this.newTask,\n        completed: false,\n        id: Date.now() // Asignamos un ID único con la hora actual\n      };\n      this.allTasks.unshift(task); // Agregamos la tarea al principio del array\n      this.newTask = ''; // Limpiamos el campo de texto\n    },\n    toggleTaskCompletion(task) {\n      task.completed = !task.completed;\n    },\n    deleteTask(task) {\n      this.allTasks = this.allTasks.filter(t => t.id !== task.id);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","newTask","allTasks","mounted","fetchTasks","methods","response","get","todos","error","console","addTask","trim","task","todo","completed","id","Date","now","unshift","toggleTaskCompletion","deleteTask","filter","t"],"sources":["C:\\Users\\jessi\\GestorTareas-Plantilla\\GestorTareas-Plantill\\src\\views\\CombinedView.vue"],"sourcesContent":["<template>\r\n    <div class=\"container my-5\">\r\n      <h1 class=\"text-center mb-4\">Lista de Tareas</h1>\r\n  \r\n      <!-- Campo para añadir nuevas tareas (centrado) -->\r\n      <div class=\"add-task-container mb-4 d-flex justify-content-center align-items-center\">\r\n        <input\r\n          v-model=\"newTask\"\r\n          @keyup.enter=\"addTask\"\r\n          placeholder=\"Añadir una nueva tarea\"\r\n          class=\"form-control me-2\"\r\n          style=\"max-width: 400px\"\r\n        />\r\n        <button @click=\"addTask\" class=\"btn btn-primary\">\r\n          Añadir\r\n        </button>\r\n      </div>\r\n  \r\n      <!-- Mostrar las tareas combinadas, que ya incluyen las tareas de la API -->\r\n      <div v-if=\"allTasks.length > 0\">\r\n        <h3>Tareas:</h3>\r\n        <div v-for=\"task in allTasks\" :key=\"task.id\" class=\"task card mb-3\">\r\n          <div class=\"card-body\">\r\n            <h5 :style=\"{ textDecoration: task.completed ? 'line-through' : 'none' }\" class=\"card-title\">\r\n              {{ task.todo }}\r\n            </h5>\r\n            <span \r\n              :class=\"{'text-success': task.completed, 'text-danger': !task.completed}\"\r\n              class=\"d-block mb-2\"\r\n            >\r\n              {{ task.completed ? 'Completada' : 'Pendiente' }}\r\n            </span>\r\n  \r\n            <!-- Botones centrados con iconos -->\r\n            <div class=\"d-flex justify-content-center\">\r\n              <div class=\"btn-group\" role=\"group\">\r\n                <button @click=\"toggleTaskCompletion(task)\" class=\"btn btn-sm btn-warning\">\r\n                  <i class=\"fas fa-check\"></i> {{ task.completed ? 'Desmarcar' : 'Completar' }}\r\n                </button>\r\n                <button @click=\"deleteTask(task)\" class=\"btn btn-sm btn-danger\">\r\n                  <i class=\"fas fa-trash-alt\"></i> Eliminar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div v-else class=\"alert alert-info text-center\">\r\n        No hay tareas disponibles.\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'CombinedView',\r\n    data() {\r\n      return {\r\n        newTask: '', // Tarea nueva que se va a añadir\r\n        allTasks: [], // Tareas combinadas de la API y las nuevas\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchTasks(); // Cargar las tareas desde la API al montar el componente\r\n    },\r\n    methods: {\r\n      async fetchTasks() {\r\n        try {\r\n          const response = await axios.get('https://dummyjson.com/todos');\r\n          this.allTasks = response.data.todos; // Asume que la respuesta tiene un array \"todos\"\r\n        } catch (error) {\r\n          console.error('Error al cargar las tareas desde la API:', error);\r\n        }\r\n      },\r\n      addTask() {\r\n        if (this.newTask.trim() === '') return; // No permitir tareas vacías\r\n        const task = {\r\n          todo: this.newTask,\r\n          completed: false,\r\n          id: Date.now(), // Asignamos un ID único con la hora actual\r\n        };\r\n        this.allTasks.unshift(task); // Agregamos la tarea al principio del array\r\n        this.newTask = ''; // Limpiamos el campo de texto\r\n      },\r\n      toggleTaskCompletion(task) {\r\n        task.completed = !task.completed;\r\n      },\r\n      deleteTask(task) {\r\n        this.allTasks = this.allTasks.filter(t => t.id !== task.id);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .task {\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    background-color: #fff;\r\n    padding: 10px;\r\n    max-width: 500px; /* Ajustamos el ancho de las tarjetas */\r\n    margin: 10px auto; /* Centrado de las tarjetas */\r\n  }\r\n  \r\n  .task:hover {\r\n    transform: scale(1.02);\r\n    transition: transform 0.3s ease;\r\n  }\r\n  \r\n  .card-title {\r\n    font-size: 16px; /* Reducimos el tamaño del texto */\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .card-body {\r\n    background-color: #f8f9fa;\r\n  }\r\n  \r\n  button {\r\n    font-size: 14px;\r\n    border-radius: 20px;\r\n    padding: 8px 16px;\r\n  }\r\n  \r\n  .btn-group .btn {\r\n    margin-right: 5px; /* Reduce el espacio entre los botones */\r\n  }\r\n  \r\n  .btn-warning {\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .btn-warning:hover {\r\n    background-color: #e0a800;\r\n  }\r\n  \r\n  .btn-danger {\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .btn-danger:hover {\r\n    background-color: #c82333;\r\n  }\r\n  \r\n  .alert {\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .alert-info {\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  /* Estilos para los iconos */\r\n  button i {\r\n    margin-right: 5px;\r\n    font-size: 16px;\r\n  }\r\n  </style>\r\n  \r\n  <!-- No olvides importar FontAwesome en tu archivo index.html (si aún no lo has hecho) -->\r\n  <!-- Agrega este código dentro de la etiqueta <head> de tu archivo index.html -->\r\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\" />"],"mappings":"AAuDE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MAAE;MACbC,QAAQ,EAAE,EAAE,CAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,CAAC,EAAE;EACrB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAAC,6BAA6B,CAAC;QAC/D,IAAI,CAACL,QAAO,GAAII,QAAQ,CAACN,IAAI,CAACQ,KAAK,EAAE;MACvC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAClE;IACF,CAAC;IACDE,OAAOA,CAAA,EAAG;MACR,IAAI,IAAI,CAACV,OAAO,CAACW,IAAI,CAAC,MAAM,EAAE,EAAE,OAAM,CAAE;MACxC,MAAMC,IAAG,GAAI;QACXC,IAAI,EAAE,IAAI,CAACb,OAAO;QAClBc,SAAS,EAAE,KAAK;QAChBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAE;MAClB,CAAC;MACD,IAAI,CAAChB,QAAQ,CAACiB,OAAO,CAACN,IAAI,CAAC,EAAE;MAC7B,IAAI,CAACZ,OAAM,GAAI,EAAE,EAAE;IACrB,CAAC;IACDmB,oBAAoBA,CAACP,IAAI,EAAE;MACzBA,IAAI,CAACE,SAAQ,GAAI,CAACF,IAAI,CAACE,SAAS;IAClC,CAAC;IACDM,UAAUA,CAACR,IAAI,EAAE;MACf,IAAI,CAACX,QAAO,GAAI,IAAI,CAACA,QAAQ,CAACoB,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACP,EAAC,KAAMH,IAAI,CAACG,EAAE,CAAC;IAC7D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}